/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package org.intellij.sdk.language;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static org.intellij.sdk.language.psi.TestTypes.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>_TestLexer.flex</tt>
 */
public class _TestLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [11, 6, 4]
   * Total runtime size is 14272 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>10]<<6)|((ch>>4)&0x3f)]<<4)|(ch&0xf)];
  }

  /* The ZZ_CMAP_Z table has 1088 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\2\11\1\12\1\13\6\14\1\15\23\14\1\16"+
    "\1\14\1\17\1\20\12\14\1\21\10\11\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1"+
    "\32\1\33\1\34\1\35\2\11\1\14\1\36\3\11\1\37\10\11\1\40\1\41\5\14\1\42\1\43"+
    "\11\11\1\44\2\11\1\45\5\11\1\46\4\11\1\47\1\50\4\11\51\14\1\51\3\14\1\52\1"+
    "\53\4\14\1\54\12\11\1\55\u0381\11");

  /* The ZZ_CMAP_Y table has 2944 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\1\1\11\1\12\1\13\1\14\1\13\1\14\3"+
    "\13\1\15\3\13\1\16\24\13\1\17\1\20\1\21\10\1\1\22\1\23\1\13\1\24\4\13\1\25"+
    "\10\13\1\26\12\13\1\27\1\13\1\30\1\27\1\13\1\31\4\1\1\13\1\32\1\33\2\1\2\13"+
    "\1\32\1\1\1\34\1\27\5\13\1\35\1\36\1\37\1\1\1\40\1\13\1\1\1\41\5\13\1\42\1"+
    "\43\1\44\1\13\1\32\1\45\1\13\1\46\1\47\1\1\1\13\1\50\4\1\1\13\1\51\4\1\1\52"+
    "\2\13\1\53\1\1\1\54\1\20\1\27\1\55\1\56\1\57\1\60\1\61\1\62\2\20\1\63\1\56"+
    "\1\57\1\64\1\1\1\65\1\1\1\66\1\67\1\24\1\57\1\70\1\1\1\71\1\20\1\72\1\73\1"+
    "\56\1\57\1\70\1\1\1\62\1\20\1\43\1\74\1\75\1\76\1\77\1\1\1\71\2\1\1\100\1"+
    "\40\1\57\1\53\1\1\1\101\1\20\1\1\1\102\1\40\1\57\1\103\1\1\1\61\1\20\1\104"+
    "\1\100\1\40\1\13\1\105\1\61\1\106\1\20\1\44\1\107\1\110\1\13\1\111\1\112\3"+
    "\1\1\27\2\13\1\113\1\112\3\1\1\114\1\115\1\116\1\117\1\120\1\121\2\1\1\71"+
    "\3\1\1\122\1\13\1\123\1\1\1\124\7\1\2\13\1\32\1\125\1\1\1\126\1\127\1\130"+
    "\1\131\1\1\2\13\1\132\2\13\1\133\24\13\1\134\1\135\2\13\1\134\2\13\1\136\1"+
    "\137\1\14\3\13\1\137\3\13\1\32\2\1\1\13\1\1\5\13\1\140\1\27\45\13\1\141\1"+
    "\13\1\142\1\32\4\13\1\32\1\143\1\144\1\20\1\13\1\20\1\13\1\20\1\144\1\71\3"+
    "\13\1\145\1\1\1\146\4\1\5\13\1\31\1\147\1\13\1\150\4\13\1\42\1\13\1\151\3"+
    "\1\1\13\1\152\1\153\2\13\1\154\1\13\1\77\3\1\1\13\1\112\3\13\1\153\4\1\1\155"+
    "\5\1\1\107\2\13\1\145\1\156\3\1\1\157\1\13\1\160\1\44\2\13\1\42\1\1\2\13\1"+
    "\145\1\1\1\41\1\44\1\13\1\152\1\50\5\1\1\161\1\162\14\13\4\1\21\13\1\140\2"+
    "\13\1\140\1\163\1\13\1\152\3\13\1\164\1\165\1\166\1\123\1\165\1\167\1\1\1"+
    "\170\2\1\1\171\1\1\1\172\1\1\1\123\6\1\1\173\1\174\1\175\1\176\1\177\3\1\1"+
    "\200\147\1\2\13\1\151\2\13\1\151\10\13\1\201\1\202\2\13\1\132\3\13\1\203\1"+
    "\1\1\13\1\112\4\204\4\1\1\125\35\1\1\205\2\1\1\206\1\27\4\13\1\207\1\27\4"+
    "\13\1\133\1\107\1\13\1\152\1\27\4\13\1\151\1\1\1\13\1\32\3\1\1\13\40\1\133"+
    "\13\1\42\4\1\135\13\1\42\2\1\10\13\1\123\4\1\2\13\1\152\20\13\1\123\1\13\1"+
    "\210\1\1\2\13\1\151\1\125\1\13\1\152\4\13\1\42\2\1\1\211\1\212\5\13\1\213"+
    "\1\13\1\151\1\31\3\1\1\211\1\214\1\13\1\33\1\1\3\13\1\145\1\212\2\13\1\145"+
    "\3\1\1\215\1\44\1\13\1\42\1\13\1\112\1\1\1\13\1\123\1\52\2\13\1\33\1\125\1"+
    "\1\1\216\1\217\2\13\1\50\1\1\1\220\1\1\1\13\1\221\3\13\1\222\1\223\1\224\1"+
    "\32\1\66\1\225\1\226\1\204\2\13\1\133\1\42\7\13\1\33\1\1\72\13\1\145\1\13"+
    "\1\227\2\13\1\154\20\1\26\13\1\152\6\13\1\77\2\1\1\112\1\230\1\57\1\231\1"+
    "\232\6\13\1\20\1\1\1\157\25\13\1\152\1\1\4\13\1\212\2\13\1\31\2\1\1\154\7"+
    "\1\1\216\7\13\1\123\2\1\1\27\1\32\1\27\1\32\1\233\4\13\1\151\1\234\1\235\2"+
    "\1\1\236\1\13\1\14\1\237\2\152\2\1\7\13\1\32\30\1\1\13\1\123\3\13\1\71\2\1"+
    "\2\13\1\1\1\13\1\240\2\13\1\42\1\13\1\152\2\13\1\241\3\1\11\13\1\152\1\1\2"+
    "\13\1\241\1\13\1\154\2\13\1\31\3\13\1\145\11\1\23\13\1\112\1\13\1\42\1\31"+
    "\11\1\1\242\2\13\1\243\1\13\1\42\1\13\1\112\1\13\1\151\4\1\1\13\1\244\1\13"+
    "\1\42\1\13\1\77\4\1\3\13\1\245\4\1\1\71\1\246\1\13\1\145\2\1\1\13\1\123\1"+
    "\13\1\123\2\1\1\122\1\13\1\153\1\1\3\13\1\42\1\13\1\42\1\13\1\33\1\13\1\20"+
    "\6\1\4\13\1\50\3\1\3\13\1\33\3\13\1\33\60\1\1\157\2\13\1\31\4\1\1\157\2\13"+
    "\2\1\1\13\1\50\1\1\1\157\1\13\1\112\2\1\2\13\1\247\1\157\2\13\1\33\1\250\1"+
    "\251\2\1\1\13\1\24\1\154\5\1\1\252\1\253\1\50\2\13\1\151\2\1\1\73\1\56\1\57"+
    "\1\70\1\1\1\254\1\20\11\1\3\13\1\153\1\255\3\1\3\13\1\1\1\256\13\1\2\13\1"+
    "\151\2\1\1\257\2\1\3\13\1\1\1\260\3\1\2\13\1\32\5\1\1\13\1\77\30\1\4\13\1"+
    "\1\1\125\34\1\3\13\1\50\20\1\1\57\1\13\1\151\1\1\1\71\2\1\1\212\1\13\67\1"+
    "\71\13\1\77\16\1\14\13\1\145\53\1\2\13\1\151\75\1\44\13\1\112\33\1\43\13\1"+
    "\50\1\13\1\151\7\1\1\13\1\152\1\1\3\13\1\1\1\145\1\1\1\157\1\261\1\13\67\1"+
    "\4\13\1\153\1\71\3\1\1\157\4\1\1\71\1\1\76\13\1\123\1\1\57\13\1\33\20\1\1"+
    "\20\77\1\6\13\1\32\1\123\1\50\1\77\66\1\5\13\1\216\3\13\1\144\1\262\1\263"+
    "\1\264\3\13\1\265\1\266\1\13\1\267\1\270\1\40\24\13\1\271\1\13\1\40\1\133"+
    "\1\13\1\133\1\13\1\216\1\13\1\216\1\151\1\13\1\151\1\13\1\57\1\13\1\57\1\13"+
    "\1\220\3\1\14\13\1\153\3\1\4\13\1\145\113\1\1\264\1\13\1\272\1\273\1\274\1"+
    "\275\1\276\1\277\1\300\1\154\1\301\1\154\24\1\55\13\1\112\2\1\103\13\1\153"+
    "\15\13\1\152\150\13\1\20\25\1\41\13\1\152\36\1");

  /* The ZZ_CMAP_A table has 3104 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\17\4\2\22\0\1\17\1\0\1\15\1\4\3\0\1\13\1\60\1\61\1\65\1\63\1\64\1"+
    "\62\1\6\1\0\12\5\1\7\1\56\1\66\1\57\1\67\2\0\1\21\1\22\1\35\1\24\1\23\1\50"+
    "\1\52\1\43\1\16\1\54\1\37\1\20\1\45\1\31\1\44\1\41\1\55\1\30\1\34\1\26\1\40"+
    "\1\53\1\42\1\51\1\32\1\12\1\0\1\14\2\0\1\11\1\0\1\21\1\22\1\35\1\24\1\23\1"+
    "\50\1\52\1\43\1\47\1\54\1\37\1\20\1\45\1\31\1\44\1\41\1\55\1\27\1\34\1\25"+
    "\1\40\1\53\1\42\1\51\1\32\1\12\12\0\1\1\12\0\1\3\11\0\1\10\12\0\1\10\4\0\1"+
    "\10\5\0\27\10\1\0\10\10\2\46\35\10\1\33\2\10\4\0\14\10\16\0\5\10\7\0\1\10"+
    "\1\0\1\10\1\0\5\10\1\0\2\10\2\0\4\10\1\0\1\10\6\0\1\10\1\0\3\10\1\0\1\10\1"+
    "\0\4\10\1\0\23\10\1\0\13\10\10\0\6\10\1\0\26\10\2\0\1\10\6\0\10\10\10\0\13"+
    "\10\5\0\3\10\33\0\6\10\1\0\1\10\17\0\2\10\7\0\2\10\12\0\3\10\2\0\2\10\1\0"+
    "\16\10\15\0\11\10\13\0\1\10\30\0\6\10\4\0\2\10\4\0\1\10\5\0\6\10\4\0\1\10"+
    "\11\0\1\10\3\0\1\10\7\0\11\10\7\0\5\10\1\0\10\10\6\0\26\10\3\0\1\10\2\0\1"+
    "\10\7\0\11\10\4\0\10\10\2\0\2\10\2\0\26\10\1\0\7\10\1\0\1\10\3\0\4\10\3\0"+
    "\1\10\20\0\1\10\15\0\2\10\1\0\1\10\5\0\6\10\4\0\2\10\1\0\2\10\1\0\2\10\1\0"+
    "\2\10\17\0\4\10\1\0\1\10\3\0\3\10\20\0\11\10\1\0\2\10\1\0\2\10\1\0\5\10\3"+
    "\0\1\10\2\0\1\10\30\0\1\10\13\0\10\10\2\0\1\10\3\0\1\10\1\0\6\10\3\0\3\10"+
    "\1\0\4\10\3\0\2\10\1\0\1\10\1\0\2\10\3\0\2\10\3\0\3\10\3\0\14\10\13\0\10\10"+
    "\1\0\2\10\10\0\3\10\5\0\1\10\4\0\10\10\1\0\6\10\1\0\5\10\3\0\1\10\3\0\2\10"+
    "\15\0\13\10\2\0\1\10\6\0\3\10\10\0\1\10\5\0\22\10\3\0\10\10\1\0\11\10\1\0"+
    "\1\10\2\0\7\10\11\0\1\10\1\0\2\10\15\0\2\10\1\0\1\10\2\0\2\10\1\0\1\10\2\0"+
    "\1\10\6\0\4\10\1\0\7\10\1\0\3\10\1\0\1\10\1\0\1\10\2\0\2\10\1\0\4\10\1\0\2"+
    "\10\11\0\1\10\2\0\5\10\1\0\1\10\25\0\14\10\1\0\24\10\13\0\5\10\22\0\7\10\4"+
    "\0\4\10\3\0\1\10\3\0\2\10\7\0\3\10\4\0\15\10\14\0\1\10\1\0\6\10\1\0\1\10\5"+
    "\0\1\10\2\0\13\10\1\0\15\10\1\0\4\10\2\0\7\10\1\0\1\10\1\0\4\10\2\0\1\10\1"+
    "\0\4\10\2\0\7\10\1\0\1\10\1\0\4\10\2\0\16\10\2\0\6\10\2\0\15\10\2\0\1\10\1"+
    "\3\17\10\1\0\10\10\7\0\15\10\1\0\6\10\23\0\1\10\4\0\1\10\3\0\5\10\2\0\22\10"+
    "\1\0\1\10\5\0\17\10\1\0\16\10\2\0\5\10\13\0\14\10\13\0\1\10\15\0\7\10\7\0"+
    "\16\10\15\0\2\10\11\0\4\10\1\0\4\10\3\0\2\10\11\0\10\10\1\0\1\10\1\0\1\10"+
    "\1\0\1\10\1\0\6\10\1\0\7\10\1\0\1\10\3\0\3\10\1\0\7\10\3\0\4\10\2\0\6\10\4"+
    "\0\13\3\15\0\2\1\5\0\1\3\17\0\1\3\1\0\1\10\15\0\1\10\2\0\1\10\4\0\1\10\2\0"+
    "\12\10\1\0\1\10\3\0\5\10\6\0\1\10\1\0\1\10\1\0\1\10\1\0\1\36\3\10\1\0\13\10"+
    "\2\0\4\10\5\0\5\10\4\0\1\10\4\0\2\10\13\0\5\10\6\0\4\10\3\0\2\10\14\0\10\10"+
    "\7\0\10\10\1\0\7\10\1\0\1\3\4\0\2\10\12\0\5\10\5\0\2\10\3\0\7\10\6\0\3\10"+
    "\12\0\2\10\13\0\11\10\2\0\27\10\2\0\7\10\1\0\3\10\1\0\4\10\1\0\4\10\2\0\6"+
    "\10\3\0\1\10\1\0\1\10\2\0\5\10\1\0\12\10\12\0\5\10\1\0\3\10\1\0\10\10\4\0"+
    "\7\10\3\0\1\10\3\0\2\10\1\0\1\10\3\0\2\10\2\0\5\10\2\0\1\10\1\0\1\10\30\0"+
    "\3\10\3\0\6\10\2\0\6\10\2\0\6\10\11\0\7\10\4\0\5\10\3\0\5\10\5\0\1\10\1\0"+
    "\10\10\1\0\5\10\1\0\1\10\1\0\2\10\1\0\2\10\1\0\12\10\6\0\12\10\2\0\6\10\2"+
    "\0\6\10\2\0\6\10\2\0\3\10\3\0\14\10\1\0\16\10\1\0\2\10\1\0\2\10\1\0\10\10"+
    "\6\0\4\10\4\0\16\10\2\0\1\10\1\0\14\10\1\0\2\10\3\0\1\10\2\0\4\10\1\0\2\10"+
    "\12\0\10\10\6\0\6\10\1\0\3\10\1\0\12\10\3\0\1\10\12\0\4\10\25\0\1\10\1\0\1"+
    "\10\3\0\7\10\1\0\1\10\1\0\4\10\1\0\17\10\1\0\2\10\14\0\3\10\7\0\4\10\11\0"+
    "\2\10\1\0\1\10\20\0\4\10\10\0\1\10\13\0\10\10\5\0\3\10\2\0\1\10\2\0\2\10\2"+
    "\0\4\10\1\0\14\10\1\0\1\10\1\0\7\10\1\0\21\10\1\0\4\10\2\0\10\10\1\0\7\10"+
    "\1\0\14\10\1\0\4\10\1\0\5\10\1\0\1\10\3\0\14\10\2\0\10\10\1\0\2\10\1\0\1\10"+
    "\2\0\1\10\1\0\12\10\1\0\4\10\1\0\1\10\1\0\1\10\6\0\1\10\4\0\1\10\1\0\1\10"+
    "\1\0\1\10\1\0\3\10\1\0\2\10\1\0\1\10\2\0\1\10\1\0\1\10\1\0\1\10\1\0\1\10\1"+
    "\0\1\10\1\0\2\10\1\0\1\10\2\0\4\10\1\0\7\10\1\0\4\10\1\0\4\10\1\0\1\10\1\0"+
    "\12\10\1\0\5\10\1\0\3\10\1\0\5\10\1\0\5\10");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\2\1\31\7\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\4\1\7\1\0\1\22"+
    "\3\0\1\23\2\7\1\0\5\7\1\0\3\7\1\0"+
    "\11\7\1\0\7\7\1\0\27\7\1\0\2\7\1\0"+
    "\1\24\7\7\1\0\1\7\1\0\1\7\24\0\2\7"+
    "\1\0\5\7\1\0\1\7\1\0\7\7\2\0\3\7"+
    "\1\0\5\7\1\0\4\7\1\0\7\7\1\0\3\7"+
    "\1\0\12\7\1\0\1\7\1\0\1\7\1\0\7\7"+
    "\1\0\1\7\1\0\1\7\43\0\1\7\1\25\1\26"+
    "\4\0\4\7\1\0\2\7\1\0\1\7\1\0\1\7"+
    "\1\0\6\7\1\0\10\7\1\0\2\7\1\0\3\7"+
    "\2\0\2\7\1\0\4\7\1\27\1\7\32\0\1\7"+
    "\2\0\3\7\2\30\1\7\1\0\1\7\1\0\3\7"+
    "\1\0\1\7\1\0\4\7\1\0\4\7\2\0\2\7"+
    "\1\0\1\7\1\0\1\31\1\7\22\0\2\7\1\0"+
    "\2\7\1\0\1\7\1\0\3\7\1\0\1\7\1\32"+
    "\1\7\1\0\3\7\7\0\2\33\1\34\1\0\1\7"+
    "\2\35\2\7\1\0\1\7\1\0\1\7\3\0\1\7"+
    "\2\36\1\7\1\0\1\7\1\0\1\7\2\0\1\7"+
    "\1\37\1\0\1\7\1\0\1\7\1\0\1\7\2\40"+
    "\1\0\1\7\1\0\1\7\2\41";

  private static int [] zzUnpackAction() {
    int [] result = new int[451];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\70\0\160\0\250\0\340\0\70\0\u0118\0\u0150"+
    "\0\u0188\0\u01c0\0\u01f8\0\u0230\0\u0268\0\u02a0\0\u02d8\0\u0310"+
    "\0\u0348\0\u0380\0\u03b8\0\u03f0\0\u0428\0\u0460\0\u0498\0\u04d0"+
    "\0\u0508\0\u0540\0\u0578\0\u05b0\0\u05e8\0\u0620\0\u0658\0\u0690"+
    "\0\u06c8\0\u0700\0\u0738\0\70\0\70\0\70\0\70\0\u0770"+
    "\0\70\0\70\0\70\0\70\0\70\0\u07a8\0\70\0\u0188"+
    "\0\70\0\u07e0\0\u01c0\0\u0818\0\70\0\u0850\0\u0888\0\u08c0"+
    "\0\u08f8\0\u0930\0\u0968\0\u09a0\0\u09d8\0\u0a10\0\u0a48\0\u0a80"+
    "\0\u0ab8\0\u0af0\0\u0b28\0\u0b60\0\u0b98\0\u0bd0\0\u0c08\0\u0c40"+
    "\0\u0c78\0\u0cb0\0\u0ce8\0\u0d20\0\u0d58\0\u0d90\0\u0dc8\0\u0e00"+
    "\0\u0e38\0\u0e70\0\u0ea8\0\u0ee0\0\u0f18\0\u0f50\0\u0f88\0\u0fc0"+
    "\0\u0ff8\0\u1030\0\u1068\0\u10a0\0\u10d8\0\u1110\0\u1148\0\u1180"+
    "\0\u11b8\0\u11f0\0\u1228\0\u1260\0\u1298\0\u12d0\0\u1308\0\u1340"+
    "\0\u1378\0\u13b0\0\u13e8\0\u1420\0\u1458\0\u1490\0\u14c8\0\70"+
    "\0\u1500\0\u1538\0\u1570\0\u15a8\0\u15e0\0\u1618\0\u1650\0\u1688"+
    "\0\u16c0\0\u16f8\0\u1730\0\u1768\0\u17a0\0\u17d8\0\u1810\0\u1848"+
    "\0\u1880\0\u18b8\0\u18f0\0\u1928\0\u1960\0\u1998\0\u19d0\0\u1a08"+
    "\0\u1a40\0\u1a78\0\u1ab0\0\u1ae8\0\u1b20\0\u1b58\0\u1b90\0\u1bc8"+
    "\0\u1c00\0\u1c38\0\u1c70\0\u1ca8\0\u1ce0\0\u1d18\0\u1d50\0\u1d88"+
    "\0\u1dc0\0\u1df8\0\u1e30\0\u1e68\0\u1ea0\0\u1ed8\0\u1f10\0\u1f48"+
    "\0\u1f80\0\u1fb8\0\u1ff0\0\u2028\0\u2060\0\u2098\0\u20d0\0\u2108"+
    "\0\u2140\0\u2178\0\u21b0\0\u21e8\0\u2220\0\u2258\0\u2290\0\u22c8"+
    "\0\u2300\0\u2338\0\u2370\0\u23a8\0\u23e0\0\u2418\0\u2450\0\u2488"+
    "\0\u24c0\0\u24f8\0\u2530\0\u2568\0\u25a0\0\u25d8\0\u2610\0\u2648"+
    "\0\u2680\0\u26b8\0\u26f0\0\u2728\0\u2760\0\u2798\0\u27d0\0\u2808"+
    "\0\u2840\0\u2878\0\u28b0\0\u28e8\0\u2920\0\u2958\0\u2990\0\u29c8"+
    "\0\u2a00\0\u2a38\0\u2a70\0\u2aa8\0\u2ae0\0\u2b18\0\u2b50\0\u2b88"+
    "\0\u2bc0\0\u2bf8\0\u2c30\0\u2c68\0\u2ca0\0\u2cd8\0\u2d10\0\u2d48"+
    "\0\u2d80\0\u2db8\0\u2df0\0\u2e28\0\u2e60\0\u2e98\0\u2ed0\0\u2f08"+
    "\0\u2f40\0\u2f78\0\u2fb0\0\u2fe8\0\u3020\0\u3058\0\u3090\0\u30c8"+
    "\0\u3100\0\u3138\0\u3170\0\u31a8\0\u31e0\0\u3218\0\u3250\0\u3288"+
    "\0\u32c0\0\u32f8\0\u3330\0\u3368\0\u0150\0\u0150\0\u33a0\0\u33d8"+
    "\0\u3410\0\u3448\0\u3480\0\u34b8\0\u34f0\0\u3528\0\u3560\0\u3598"+
    "\0\u35d0\0\u3608\0\u3640\0\u3678\0\u36b0\0\u36e8\0\u3720\0\u3758"+
    "\0\u3790\0\u37c8\0\u3800\0\u3838\0\u3870\0\u38a8\0\u38e0\0\u3918"+
    "\0\u3950\0\u3988\0\u39c0\0\u39f8\0\u3a30\0\u3a68\0\u3aa0\0\u3ad8"+
    "\0\u3b10\0\u3b48\0\u3b80\0\u3bb8\0\u3bf0\0\u3c28\0\u3c60\0\u3c98"+
    "\0\u3cd0\0\u3d08\0\u3d40\0\u3d78\0\u3db0\0\70\0\u3de8\0\u3e20"+
    "\0\u3e58\0\u3e90\0\u3ec8\0\u3f00\0\u3f38\0\u3f70\0\u3fa8\0\u3fe0"+
    "\0\u4018\0\u4050\0\u4088\0\u40c0\0\u40f8\0\u4130\0\u4168\0\u41a0"+
    "\0\u41d8\0\u4210\0\u4248\0\u4280\0\u42b8\0\u42f0\0\u4328\0\u4360"+
    "\0\u4398\0\u43d0\0\u4408\0\u4440\0\u4478\0\u44b0\0\u44e8\0\u0150"+
    "\0\70\0\u4520\0\u4558\0\u4590\0\u45c8\0\u4600\0\u4638\0\u4670"+
    "\0\u46a8\0\u46e0\0\u4718\0\u4750\0\u4788\0\u47c0\0\u47f8\0\u4830"+
    "\0\u4868\0\u48a0\0\u48d8\0\u4910\0\u4948\0\u4980\0\u49b8\0\u49f0"+
    "\0\u4a28\0\u4a60\0\u4a98\0\u0150\0\u4ad0\0\u4b08\0\u4b40\0\u4b78"+
    "\0\u4bb0\0\u4be8\0\u4c20\0\u4c58\0\u4c90\0\u4cc8\0\u4d00\0\u4d38"+
    "\0\u4d70\0\u4da8\0\u4de0\0\u4e18\0\u4e50\0\u4e88\0\u4ec0\0\u4ef8"+
    "\0\u4ec0\0\u4f30\0\u4f68\0\u4fa0\0\u4fd8\0\u5010\0\u5048\0\u5080"+
    "\0\u50b8\0\u50f0\0\u5128\0\u5160\0\u0150\0\u5198\0\u51d0\0\u5208"+
    "\0\u5240\0\u5278\0\u52b0\0\u52e8\0\u5320\0\u5358\0\u5390\0\u53c8"+
    "\0\u5400\0\70\0\u4ec0\0\u0150\0\u5438\0\u5470\0\70\0\u0150"+
    "\0\u54a8\0\u54e0\0\u5518\0\u5550\0\u5588\0\u55c0\0\u55f8\0\u5630"+
    "\0\u5668\0\u56a0\0\70\0\u0150\0\u56d8\0\u5710\0\u5748\0\u5780"+
    "\0\u57b8\0\u57f0\0\u5828\0\u5860\0\u0150\0\u5898\0\u58d0\0\u5908"+
    "\0\u5940\0\u5978\0\u59b0\0\70\0\u0150\0\u59e8\0\u5a20\0\u5a58"+
    "\0\u5a90\0\70\0\u0150";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[451];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\3\3\1\4\1\5\1\6\1\7\1\10\1\2"+
    "\1\10\1\11\1\2\1\12\1\13\1\3\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\10\2\26\1\27\2\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\10\2\36\1\37\1\10\1\40\1\41\1\42"+
    "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52"+
    "\1\53\1\54\1\55\71\0\3\3\13\0\1\3\50\0"+
    "\1\4\2\0\65\4\5\0\1\5\1\56\71\0\1\10"+
    "\1\0\1\10\3\0\1\10\1\0\36\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\13\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\12\0\13\60"+
    "\1\61\1\62\53\60\14\63\1\64\1\61\52\63\2\0"+
    "\1\65\2\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\66\1\65\6\10\1\66\1\10\1\66\1\67\1\10"+
    "\1\70\1\71\1\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\72\1\0"+
    "\1\10\1\73\1\10\1\74\7\10\1\0\2\10\1\0"+
    "\5\10\1\75\1\10\1\76\1\72\6\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\1\77"+
    "\3\10\1\100\4\10\1\101\1\10\1\102\1\103\1\10"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\1\10\1\104\1\10"+
    "\1\105\6\10\1\71\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\11\10\1\106\1\10\1\0\2\10\1\0"+
    "\7\10\1\0\2\10\1\107\4\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\110\1\0\1\10\1\111"+
    "\1\10\1\112\3\10\2\113\2\10\1\0\2\10\1\0"+
    "\7\10\1\114\1\110\6\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\1\10\1\115\5\10"+
    "\2\116\2\10\1\0\2\10\1\0\5\10\1\117\1\10"+
    "\1\0\7\10\14\0\1\65\2\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\66\1\65\1\10\1\115\4\10"+
    "\1\66\1\116\1\120\2\10\1\0\2\10\1\0\5\10"+
    "\1\117\1\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\121\1\0\3\10\1\122\7\10"+
    "\1\0\2\10\1\0\5\10\1\123\1\10\1\124\1\121"+
    "\6\10\14\0\1\65\2\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\125\1\65\3\10\1\122\2\10\1\66"+
    "\1\10\1\66\2\10\1\0\2\10\1\0\5\10\1\123"+
    "\1\10\1\124\1\121\6\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\13\10\1\0\2\10"+
    "\1\0\5\10\1\126\1\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\3\10"+
    "\1\127\1\10\2\130\4\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\1\10\1\131\5\10\2\132\2\10"+
    "\1\0\2\10\1\0\4\10\1\133\1\134\1\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\3\10\1\135\7\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\11\10\1\136\1\10\1\0"+
    "\2\10\1\0\2\10\1\137\4\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\7\10\2\140\2\10\1\0\2\10\1\0\4\10\1\141"+
    "\2\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\4\10\1\142\2\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\1\10\1\143"+
    "\11\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\7\10\2\144\2\10\1\0\2\10\1\0\1\10\1\145"+
    "\5\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\11\10\1\67\1\10\1\70"+
    "\1\71\1\10\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\7\10"+
    "\2\146\2\10\1\0\2\10\1\0\1\10\1\147\3\10"+
    "\1\150\1\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\7\10\2\151\2\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\152\1\0\1\10"+
    "\1\153\11\10\1\0\2\10\1\0\7\10\1\154\1\152"+
    "\6\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\2\10\1\0\5\10\1\155"+
    "\1\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\1\10\1\156\5\10\1\0\7\10\74\0\1\157\12\0"+
    "\1\56\62\0\1\60\2\0\65\60\1\63\2\0\65\63"+
    "\2\0\1\65\2\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\66\1\65\6\10\1\66\1\10\1\66\2\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\14\0\1\160"+
    "\2\0\1\10\1\0\1\57\1\0\2\10\3\0\1\36"+
    "\1\160\1\161\1\15\1\162\1\163\1\164\2\165\2\166"+
    "\1\167\1\10\1\170\1\171\1\27\1\172\1\30\1\31"+
    "\1\173\1\33\1\34\1\35\1\10\1\174\1\36\1\37"+
    "\1\10\1\40\1\41\1\42\1\10\14\0\1\160\13\0"+
    "\1\174\1\160\1\175\1\176\1\177\1\200\1\201\2\202"+
    "\2\203\1\204\1\0\2\205\1\206\2\172\1\207\1\210"+
    "\1\211\1\212\1\213\1\0\2\174\1\214\1\0\1\215"+
    "\1\216\1\217\15\0\1\160\2\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\36\1\160\1\161\1\15\1\162"+
    "\1\163\1\20\2\220\2\166\1\25\1\10\1\205\1\221"+
    "\1\27\1\172\1\30\1\31\1\173\1\33\1\34\1\35"+
    "\1\10\1\174\1\36\1\37\1\10\1\40\1\41\1\42"+
    "\1\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\2\10\1\222\1\223\5\10"+
    "\1\224\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\2\10\1\225\10\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\0"+
    "\2\10\1\0\7\10\1\0\1\10\1\126\5\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\1\10\1\226\11\10\1\0\2\10\1\0\5\10\1\227"+
    "\1\10\1\0\7\10\50\0\2\222\5\0\1\230\27\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\1\71\4\10\2\231\4\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\4\10\1\71\6\10\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\4\10\1\71\5\10"+
    "\1\71\1\0\2\10\1\0\7\10\1\0\7\10\14\0"+
    "\1\160\13\0\1\174\1\160\1\175\1\176\1\177\1\200"+
    "\1\201\2\202\2\203\1\204\1\0\2\205\1\232\2\172"+
    "\1\207\1\210\1\211\1\212\1\213\1\0\2\174\1\214"+
    "\1\0\1\215\1\216\1\217\15\0\1\160\2\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\36\1\160\1\161"+
    "\1\15\1\162\1\163\1\20\2\220\2\166\1\25\1\10"+
    "\1\205\1\221\1\233\1\172\1\30\1\31\1\173\1\33"+
    "\1\34\1\35\1\10\1\174\1\36\1\37\1\10\1\40"+
    "\1\41\1\42\1\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\1\10\1\234"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\5\10\2\235\4\10"+
    "\1\0\2\10\1\0\7\10\1\0\3\10\1\236\3\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\4\10\1\237\6\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\240\1\0\3\10\1\241\7\10\1\0\2\10"+
    "\1\0\7\10\1\242\1\240\6\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\243"+
    "\1\244\1\10\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\5\10"+
    "\2\245\4\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\1\246\12\10\1\247\1\241\1\10\1\0\7\10"+
    "\1\0\1\10\1\250\5\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\13\10\1\0\2\10"+
    "\1\0\5\10\1\117\1\10\1\0\7\10\45\0\2\243"+
    "\40\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\2\10\1\251\10\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\1\10\1\252\11\10\1\0\2\10"+
    "\1\0\1\10\1\253\5\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\13\10"+
    "\1\0\2\10\1\0\2\10\1\71\4\10\1\0\7\10"+
    "\14\0\1\65\2\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\66\1\65\1\10\1\252\4\10\1\66\1\10"+
    "\1\66\2\10\1\0\2\10\1\0\1\10\1\253\5\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\13\10\1\0\2\10\1\0\7\10"+
    "\1\0\3\10\1\254\3\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\13\10\1\255\1\256"+
    "\1\10\1\0\2\10\1\257\4\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\1\260\12\10\1\0\2\10\1\0\3\10\1\261\3\10"+
    "\1\0\7\10\64\0\1\262\17\0\1\65\2\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\66\1\65\6\10"+
    "\1\66\1\10\1\66\2\10\1\0\2\10\1\0\7\10"+
    "\1\0\3\10\1\254\3\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\5\10\2\71\4\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\1\263"+
    "\4\10\2\71\4\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\1\10\1\264\11\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\222\1\223\1\10"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\3\10\1\265\7\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\3\10"+
    "\1\266\7\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\1\267\10\10\1\270\1\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\12\10\1\71\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\271\1\0\13\10\1\0\2\10"+
    "\1\0\7\10\1\272\1\271\6\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\4\10\1\265"+
    "\6\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\273\1\0"+
    "\1\10\1\274\11\10\1\0\2\10\1\0\5\10\1\275"+
    "\1\10\1\276\1\273\6\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\12\10\1\277\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\3\10\1\300"+
    "\7\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\13\10\1\0\2\10\1\0\7\10\1\0\4\10\1\301"+
    "\2\10\14\0\1\160\2\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\36\1\160\1\161\1\15\1\162\1\163"+
    "\1\302\2\220\2\166\1\25\1\10\1\205\1\221\1\27"+
    "\1\172\1\30\1\31\1\173\1\33\1\34\1\35\1\10"+
    "\1\174\1\36\1\37\1\10\1\40\1\41\1\42\1\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\5\10\2\231\4\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\13\10\1\0\2\10\1\0\5\10"+
    "\1\303\1\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\1\304\12\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\7\10\2\305"+
    "\2\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\13\10\1\0\2\10\1\0\5\10\1\306\1\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\3\10\1\307\7\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\1\310\12\10\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\35\0\1\311\51\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\312\1\0\13\10"+
    "\1\0\2\10\1\0\7\10\1\313\1\312\6\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\3\10\1\314\7\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\74\0\1\315\12\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\72\1\0\3\10\1\74\7\10\1\0"+
    "\2\10\1\0\7\10\1\76\1\72\6\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\1\10"+
    "\1\104\1\10\1\316\6\10\1\71\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\7\10\1\0\2\10\1\107\4\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\110\1\0\1\10\1\111"+
    "\1\10\1\317\3\10\2\113\2\10\1\0\2\10\1\0"+
    "\7\10\1\114\1\110\6\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\1\10\1\115\5\10"+
    "\2\320\2\10\1\0\2\10\1\0\5\10\1\321\1\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\121\1\0\3\10\1\322\7\10\1\0\2\10"+
    "\1\0\5\10\1\323\1\10\1\124\1\121\6\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\3\10\1\324\7\10\1\0\2\10\1\0\5\10\1\126"+
    "\1\10\1\0\7\10\35\0\1\325\51\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\3\10\1\326"+
    "\7\10\1\0\2\10\1\0\7\10\1\0\7\10\35\0"+
    "\1\327\51\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\7\10\2\330\2\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\43\0\1\331\1\0\2\70\51\0"+
    "\1\76\4\0\1\332\22\0\2\76\40\0\1\333\3\0"+
    "\1\334\4\0\1\335\1\0\2\102\54\0\1\336\1\0"+
    "\1\337\6\0\1\70\106\0\1\340\34\0\1\114\2\0"+
    "\1\341\1\0\1\342\3\0\2\343\15\0\2\114\41\0"+
    "\1\344\5\0\2\345\13\0\1\346\41\0\1\124\4\0"+
    "\1\347\20\0\1\350\1\0\2\124\64\0\1\351\46\0"+
    "\1\352\65\0\1\353\5\0\2\354\12\0\1\355\1\356"+
    "\54\0\1\357\7\0\1\360\55\0\2\361\102\0\1\362"+
    "\45\0\1\363\75\0\2\364\7\0\1\365\56\0\2\366"+
    "\7\0\1\367\3\0\1\370\52\0\2\371\55\0\1\154"+
    "\2\0\1\372\24\0\2\154\64\0\1\373\30\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\1\10"+
    "\1\115\5\10\2\320\2\10\1\0\2\10\1\0\5\10"+
    "\1\117\1\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\3\10\1\127\7\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\35\0\1\70"+
    "\51\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\3\10\1\71\7\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\126\1\0\13\10\1\0\2\10\1\0\7\10"+
    "\1\351\1\126\6\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\3\10\1\374\7\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\4\10\1\375"+
    "\6\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\13\10\1\0\2\10\1\0\2\10\1\376\4\10\1\0"+
    "\7\10\30\0\1\351\27\0\2\351\25\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\3\10\1\324"+
    "\7\10\1\0\2\10\1\0\7\10\1\0\7\10\14\0"+
    "\1\160\13\0\1\174\1\160\1\175\1\377\1\177\1\200"+
    "\1\201\2\202\2\u0100\1\204\1\0\2\205\1\206\2\172"+
    "\1\207\1\210\1\211\1\u0101\1\u0102\1\0\2\174\1\214"+
    "\1\0\1\215\1\216\1\217\15\0\1\160\2\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\36\1\160\1\161"+
    "\1\u0103\1\162\1\163\1\20\2\220\2\u0104\1\25\1\10"+
    "\1\205\1\221\1\27\1\172\1\30\1\31\1\173\1\33"+
    "\1\u0105\1\u0106\1\10\1\174\1\36\1\37\1\10\1\40"+
    "\1\41\1\42\1\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\u0107"+
    "\1\306\6\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\13\10\1\0\2\10"+
    "\1\0\3\10\1\u0108\3\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\u0109\1\0\13\10"+
    "\1\0\2\10\1\0\7\10\1\u010a\1\u0109\6\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\1\u010b\12\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\13\10\1\u010c\1\u010d\1\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\1\10\1\71\1\0\7\10"+
    "\1\0\7\10\45\0\2\u010c\60\0\2\u010e\46\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\5\10"+
    "\2\u010f\4\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\1\10\1\u0110\11\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\3\10\1\u0111\7\10\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\47\0\1\70\37\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\1\10"+
    "\1\u0112\11\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\1\223\12\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\11\10\1\u0113\1\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\11\10\1\u0114\1\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\0"+
    "\2\10\1\0\4\10\1\126\2\10\1\0\7\10\37\0"+
    "\2\u0115\46\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\5\10\2\u0116\4\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\1\u0117\12\10\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\1\u0118\12\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\11\10\1\u0119"+
    "\1\10\1\0\2\10\1\0\7\10\1\0\7\10\55\0"+
    "\1\351\31\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\3\10\1\u011a\7\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\5\10\2\u011b\4\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\1\10\1\u0111"+
    "\11\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\13\10\1\0\1\10\1\u011c\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\13\10\1\0\2\10\1\0\1\10\1\u011d\5\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\13\10\1\u011e\1\u011f\1\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\5\10\1\312\1\10\1\0\6\10\1\u0120\56\0\1\313"+
    "\10\0\1\u0121\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\13\10\1\0\2\10\1\0\6\10"+
    "\1\u0122\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\7\10\1\0\3\10\1\u0123\3\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\0"+
    "\1\10\1\u0124\1\0\7\10\1\0\7\10\57\0\1\u0125"+
    "\27\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\13\10\1\u0126\1\u0127\1\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\7\10\2\223\2\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\u0128\1\0\13\10\1\0\2\10\1\0"+
    "\7\10\1\u0129\1\u0128\6\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\110\1\0\1\10\1\111\1\10"+
    "\1\u012a\3\10\2\113\2\10\1\0\2\10\1\0\7\10"+
    "\1\114\1\110\6\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\6\10\1\71\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\1\71\12\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\3\10\1\u012b"+
    "\7\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\13\10\1\0\2\10\1\0\1\10\1\117\5\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\2\10\1\0\3\10\1\71"+
    "\3\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\1\10\1\u012c\5\10\1\0\7\10\54\0\1\70\32\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\11\10\1\71\1\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\43\0\1\70\43\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\7\10\2\u012d\2\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\74\0\1\u012e\12\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\5\10\2\235\4\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\1\246\12\10\1\247\1\241\1\10\1\0"+
    "\7\10\1\0\1\10\1\250\1\71\4\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\13\10"+
    "\1\0\2\10\1\0\1\10\1\253\5\10\1\0\7\10"+
    "\14\0\1\160\2\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\36\1\160\1\161\1\15\1\162\1\163\1\20"+
    "\2\220\2\166\1\25\1\10\1\205\1\221\1\27\1\172"+
    "\1\30\1\31\1\u012f\1\33\1\34\1\35\1\10\1\174"+
    "\1\36\1\37\1\10\1\40\1\41\1\42\1\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\13\10\1\0\2\10\1\0\2\10\1\257\4\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\2\10\1\0\3\10\1\261"+
    "\3\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\7\10\2\71\2\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\32\0\1\u0130\4\0"+
    "\2\70\2\351\44\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\1\263\4\10\2\71\2\126\2\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\44\0\1\70"+
    "\42\0\1\10\1\0\1\57\1\0\2\10\3\0\1\273"+
    "\1\0\13\10\1\0\2\10\1\0\5\10\1\275\1\10"+
    "\1\276\1\273\6\10\14\0\1\160\13\0\1\174\1\160"+
    "\1\175\1\176\1\177\1\200\1\u0131\2\u0132\2\203\1\u0133"+
    "\1\0\2\170\1\206\2\172\1\207\1\210\1\211\1\212"+
    "\1\213\1\0\2\174\1\214\1\0\1\215\1\216\1\217"+
    "\63\0\1\351\37\0\1\70\4\0\2\u0134\65\0\1\70"+
    "\67\0\1\70\5\0\1\70\72\0\1\u0135\57\0\2\u0136"+
    "\57\0\1\242\4\0\1\247\22\0\2\242\45\0\2\u0137"+
    "\61\0\1\u0138\12\0\2\247\13\0\1\u0139\63\0\1\346"+
    "\45\0\1\u013a\105\0\1\u013b\70\0\1\70\67\0\1\u013c"+
    "\70\0\1\u013d\52\0\2\70\61\0\1\u0130\4\0\2\70"+
    "\74\0\2\222\56\0\1\u013e\67\0\1\u013f\64\0\1\u0140"+
    "\10\0\1\u0141\54\0\1\272\27\0\2\272\44\0\1\u013e"+
    "\61\0\1\276\25\0\1\u0142\1\0\2\276\43\0\1\u0143"+
    "\117\0\1\u0144\16\0\1\160\13\0\1\174\1\160\1\175"+
    "\1\176\1\177\1\200\1\u0145\2\202\2\203\1\204\1\0"+
    "\2\205\1\206\2\172\1\207\1\210\1\211\1\212\1\213"+
    "\1\0\2\174\1\214\1\0\1\215\1\216\1\217\40\0"+
    "\2\u0134\105\0\1\u0146\43\0\1\u0147\76\0\2\u0148\103\0"+
    "\1\u0107\43\0\1\u0149\65\0\1\313\27\0\2\313\25\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\1\u014a\12\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\32\0\1\333\3\0\1\334\4\0\1\335\1\0\2\u014b"+
    "\51\0\1\124\4\0\1\u014c\20\0\1\350\1\0\2\124"+
    "\41\0\1\363\1\0\1\u013f\64\0\1\u0140\6\0\2\364"+
    "\1\u0141\6\0\1\365\34\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\1\77\3\10\1\100\4\10"+
    "\1\101\1\10\1\u014b\1\u014d\1\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\121\1\0\3\10\1\u014e\7\10\1\0\2\10\1\0"+
    "\5\10\1\323\1\10\1\124\1\121\6\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\1\10"+
    "\1\143\1\10\1\266\7\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\1\267\6\10\2\144\1\270\1\10"+
    "\1\0\2\10\1\0\1\10\1\145\5\10\1\0\7\10"+
    "\52\0\1\346\34\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\3\10\1\u014f\7\10\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\11\10\1\u0150\1\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\43\0\1\u0151"+
    "\43\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\13\10\1\0\2\10\1\0\5\10\1\u0152\1\10"+
    "\1\0\7\10\37\0\2\u0153\46\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\5\10\2\u0154\4\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\30\0\1\u0155"+
    "\27\0\2\u0155\25\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\u0156\1\0\13\10\1\0\2\10\1\0\7\10"+
    "\1\u0155\1\u0156\6\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\2\10\1\u0157\10\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\5\10\2\223"+
    "\4\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\13\10\1\0\2\10\1\0\1\10\1\u0158\5\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\u0159\1\u015a\1\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\13\10\1\0\1\10\1\265\1\0"+
    "\7\10\1\0\7\10\33\0\1\u015b\53\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\1\10\1\u015c"+
    "\11\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\1\10\1\u015d\11\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\2\10\1\u015e\10\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\1\10\1\303\5\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\0"+
    "\1\10\1\126\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\3\10"+
    "\1\u015f\7\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\13\10\1\0\2\10\1\70\1\71\6\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\2\10\1\0\6\10\1\312"+
    "\1\0\7\10\37\0\2\u0160\46\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\5\10\2\u0161\4\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\13\10"+
    "\1\0\2\10\1\0\1\10\1\223\5\10\1\0\7\10"+
    "\52\0\1\222\34\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\1\10\1\u0162\11\10\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\13\10\1\0\2\10"+
    "\1\0\6\10\1\u0163\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\3\10\1\u0164"+
    "\7\10\1\0\2\10\1\0\7\10\1\0\7\10\33\0"+
    "\1\u0165\64\0\1\u0166\27\0\2\u0166\25\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\u0167\1\0\13\10\1\0"+
    "\2\10\1\0\7\10\1\u0166\1\u0167\6\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\11\10"+
    "\1\u0168\1\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\43\0\1\u0169\43\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\1\246\6\10\2\71\2\10\1\247"+
    "\1\241\1\10\1\0\7\10\1\0\1\10\1\250\5\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\u016a"+
    "\1\0\13\10\1\0\2\10\1\0\7\10\1\u016b\1\u016a"+
    "\6\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\3\10\1\u0154\7\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\12\10\1\u016c\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\14\0\1\160\2\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\36\1\160\1\161"+
    "\1\15\1\162\1\163\1\20\2\220\2\u016d\1\25\1\10"+
    "\1\205\1\221\1\27\1\172\1\30\1\31\1\173\1\33"+
    "\1\34\1\35\1\10\1\174\1\36\1\37\1\10\1\40"+
    "\1\41\1\42\1\10\35\0\1\u016e\62\0\1\114\2\0"+
    "\1\341\1\0\1\u016f\3\0\2\343\15\0\2\114\41\0"+
    "\1\344\5\0\2\345\13\0\1\u0170\46\0\1\u0171\20\0"+
    "\1\351\46\0\1\u0171\102\0\2\u0107\72\0\1\u0172\46\0"+
    "\1\u0173\71\0\1\u0174\65\0\1\u0175\66\0\1\222\100\0"+
    "\1\u0176\56\0\1\u0177\100\0\1\u0178\57\0\1\u0174\103\0"+
    "\1\u0179\72\0\1\u017a\62\0\2\u011e\70\0\1\u017b\61\0"+
    "\2\222\55\0\1\u0129\27\0\2\u0129\36\0\1\114\2\0"+
    "\1\341\1\0\1\u017c\3\0\2\343\15\0\2\114\65\0"+
    "\1\70\42\0\1\70\72\0\1\u017d\104\0\1\u017e\27\0"+
    "\1\u017f\2\0\2\u017f\1\u0180\1\u017f\1\u0181\1\u017f\2\u0180"+
    "\3\u017f\1\u0180\1\u017f\13\u0180\1\u017f\2\u0180\1\u017f\7\u0180"+
    "\1\u017f\7\u0180\12\u017f\2\0\1\160\13\0\1\174\1\160"+
    "\1\175\1\176\1\177\1\u0182\1\201\2\202\2\203\1\204"+
    "\1\0\2\205\1\232\2\172\1\207\1\210\1\211\1\212"+
    "\1\213\1\0\2\174\1\214\1\0\1\215\1\216\1\217"+
    "\34\0\1\u0174\17\0\1\u013c\30\0\1\160\2\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\36\1\160\1\161"+
    "\1\15\1\162\1\u0183\1\20\2\220\2\166\1\25\1\10"+
    "\1\205\1\221\1\233\1\172\1\30\1\31\1\173\1\33"+
    "\1\34\1\35\1\10\1\174\1\36\1\37\1\10\1\40"+
    "\1\41\1\42\1\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\1\10\1\u0111\11\10\1\0"+
    "\2\10\1\0\2\10\1\257\4\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\3\10\1\312\7\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\2\10\1\0\5\10\1\u0184"+
    "\1\10\1\0\7\10\45\0\2\70\40\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\70"+
    "\1\71\1\10\1\0\7\10\1\0\7\10\43\0\1\u016e"+
    "\43\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\11\10\1\u011a\1\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\1\10\1\131\11\10\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\17\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\1\126\12\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\33\0\1\u0185\53\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\1\10\1\u0186\11\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\41\0\2\u0187\44\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\7\10\2\u0188\2\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\0"+
    "\1\10\1\223\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\1\10"+
    "\1\u0189\11\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\13\10\1\0\2\10\1\0\6\10\1\u018a\1\0"+
    "\7\10\41\0\2\u018b\44\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\7\10\2\u018c\2\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\7\10\2\135"+
    "\2\10\1\0\2\10\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\1\10\1\u018d\11\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\4\10\1\u018e\6\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\41\0\2\327\74\0\1\u018f\37\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\13\10\1\0\1\10\1\u0190\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\13\10\1\0\2\10\1\0\7\10\1\0\3\10"+
    "\1\71\3\10\64\0\1\70\22\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\13\10\1\0\2\10"+
    "\1\0\7\10\1\0\3\10\1\312\3\10\64\0\1\313"+
    "\22\0\1\10\1\0\1\57\1\0\2\10\3\0\1\u0191"+
    "\1\0\3\10\1\322\7\10\1\0\2\10\1\0\5\10"+
    "\1\u0192\1\10\1\u0193\1\u0191\6\10\47\0\1\351\52\0"+
    "\1\u0138\12\0\2\247\13\0\1\u0139\1\70\20\0\1\160"+
    "\13\0\1\174\1\160\1\175\1\176\1\177\1\200\1\201"+
    "\2\202\2\203\1\204\1\0\2\205\1\206\2\172\1\207"+
    "\1\u0194\1\211\1\212\1\213\1\0\2\174\1\214\1\0"+
    "\1\215\1\216\1\217\42\0\2\70\62\0\1\u0195\66\0"+
    "\1\u0196\72\0\2\222\101\0\1\u0197\64\0\1\u013e\53\0"+
    "\1\u0198\106\0\1\u0146\65\0\2\70\75\0\1\313\45\0"+
    "\1\u0199\64\0\1\u0138\6\0\2\70\2\0\2\247\13\0"+
    "\1\u0139\35\0\1\u016b\27\0\2\u016b\43\0\1\u0153\44\0"+
    "\1\u017f\1\0\1\u019a\14\u017f\1\u019b\51\u017f\1\0\1\u019a"+
    "\2\u017f\1\u0180\1\u017f\1\u0181\1\u017f\2\u0180\3\u017f\1\u0180"+
    "\1\u019b\13\u0180\1\u017f\2\u0180\1\u017f\7\u0180\1\u017f\7\u0180"+
    "\12\u017f\2\0\1\160\13\0\1\174\1\160\1\175\1\176"+
    "\1\177\1\200\1\201\2\202\2\203\1\204\1\0\2\205"+
    "\1\206\2\172\1\207\1\210\1\211\1\212\1\213\1\0"+
    "\2\174\1\214\1\340\1\215\1\216\1\217\15\0\1\160"+
    "\2\0\1\10\1\0\1\57\1\0\2\10\3\0\1\36"+
    "\1\160\1\161\1\15\1\162\1\163\1\20\2\220\2\166"+
    "\1\25\1\10\1\205\1\221\1\27\1\172\1\30\1\31"+
    "\1\173\1\33\1\34\1\35\1\10\1\174\1\36\1\37"+
    "\1\107\1\40\1\41\1\42\1\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\0"+
    "\2\10\1\0\2\10\1\u019c\4\10\1\0\7\10\47\0"+
    "\1\u019d\37\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\1\10\1\u019e\1\0\7\10"+
    "\1\0\7\10\37\0\2\u019f\46\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\5\10\2\u01a0\4\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\13\10"+
    "\1\0\1\10\1\u01a1\1\0\7\10\1\0\7\10\17\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\10\1\0"+
    "\3\10\1\u01a2\7\10\1\0\2\10\1\0\7\10\1\0"+
    "\7\10\33\0\1\u01a3\53\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\1\10\1\u01a4\11\10\1\0"+
    "\2\10\1\0\7\10\1\0\7\10\17\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\0"+
    "\2\10\1\0\1\10\1\300\5\10\1\0\7\10\33\0"+
    "\1\u01a5\53\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\1\10\1\u01a6\11\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\17\0\1\10\1\0\1\57\1\0"+
    "\2\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\6\10\1\u0122\1\0\3\10\1\254\3\10\17\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\13\10"+
    "\1\0\1\10\1\u0124\1\0\3\10\1\261\3\10\1\0"+
    "\7\10\57\0\1\u0125\4\0\1\262\17\0\1\160\13\0"+
    "\1\174\1\160\1\175\1\176\1\177\1\200\1\201\2\202"+
    "\2\u01a7\1\204\1\0\2\205\1\206\2\172\1\207\1\210"+
    "\1\211\1\212\1\213\1\0\2\174\1\214\1\0\1\215"+
    "\1\216\1\217\36\0\1\313\65\0\1\353\66\0\1\351"+
    "\104\0\1\222\56\0\1\u01a8\70\0\2\u01a9\46\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\5\10"+
    "\2\u01aa\4\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\17\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\13\10\1\0\2\10\1\u01ab\1\u01ac\6\10\1\0"+
    "\7\10\17\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\11\10\1\u01ad\1\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\30\0\1\u01ae\27\0\2\u01ae\25\0"+
    "\1\10\1\0\1\57\1\0\2\10\3\0\1\u01af\1\0"+
    "\13\10\1\0\2\10\1\0\7\10\1\u01ae\1\u01af\6\10"+
    "\32\0\1\u01b0\54\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\1\u01b1\12\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\30\0\1\u0193\4\0\1\347\20\0"+
    "\1\u01b2\1\0\2\u0193\60\0\1\u0143\45\0\1\u01b3\27\0"+
    "\2\u01b3\25\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\u01b4\1\0\13\10\1\0\2\10\1\0\7\10\1\u01b3"+
    "\1\u01b4\6\10\17\0\1\10\1\0\1\57\1\0\2\10"+
    "\3\0\1\10\1\0\5\10\2\u01b5\4\10\1\0\2\10"+
    "\1\0\7\10\1\0\7\10\43\0\1\351\43\0\1\10"+
    "\1\0\1\57\1\0\2\10\3\0\1\10\1\0\11\10"+
    "\1\126\1\10\1\0\2\10\1\0\7\10\1\0\7\10"+
    "\23\0\1\u01b6\63\0\1\10\1\0\1\57\1\0\1\u01b7"+
    "\1\10\3\0\1\10\1\0\13\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\47\0\1\u017b\4\0\1\u013d\71\0"+
    "\1\u01b8\30\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\13\10\1\0\2\10\1\0\5\10\1\u01b9"+
    "\1\10\1\0\7\10\53\0\1\u01ba\33\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\13\10\1\0"+
    "\2\10\1\0\2\10\1\u01bb\4\10\1\0\7\10\43\0"+
    "\1\u01bc\43\0\1\10\1\0\1\57\1\0\2\10\3\0"+
    "\1\10\1\0\11\10\1\u01bd\1\10\1\0\2\10\1\0"+
    "\7\10\1\0\7\10\32\0\1\u01be\54\0\1\10\1\0"+
    "\1\57\1\0\2\10\3\0\1\10\1\0\1\u01bf\12\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\33\0\1\u01c0"+
    "\53\0\1\10\1\0\1\57\1\0\2\10\3\0\1\10"+
    "\1\0\1\10\1\u01c1\11\10\1\0\2\10\1\0\7\10"+
    "\1\0\7\10\43\0\1\u01c2\43\0\1\10\1\0\1\57"+
    "\1\0\2\10\3\0\1\10\1\0\11\10\1\u01c3\1\10"+
    "\1\0\2\10\1\0\7\10\1\0\7\10\12\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[23240];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\3\1\1\11\35\1\4\11\1\1\5\11"+
    "\1\1\1\11\1\0\1\11\3\0\1\11\2\1\1\0"+
    "\5\1\1\0\3\1\1\0\11\1\1\0\7\1\1\0"+
    "\27\1\1\0\2\1\1\0\1\11\7\1\1\0\1\1"+
    "\1\0\1\1\24\0\2\1\1\0\5\1\1\0\1\1"+
    "\1\0\7\1\2\0\3\1\1\0\5\1\1\0\4\1"+
    "\1\0\7\1\1\0\3\1\1\0\12\1\1\0\1\1"+
    "\1\0\1\1\1\0\7\1\1\0\1\1\1\0\1\1"+
    "\43\0\3\1\4\0\4\1\1\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\0\6\1\1\0\10\1\1\0\2\1"+
    "\1\0\3\1\2\0\2\1\1\0\4\1\1\11\1\1"+
    "\32\0\1\1\2\0\4\1\1\11\1\1\1\0\1\1"+
    "\1\0\3\1\1\0\1\1\1\0\4\1\1\0\4\1"+
    "\2\0\2\1\1\0\1\1\1\0\2\1\22\0\2\1"+
    "\1\0\2\1\1\0\1\1\1\0\3\1\1\0\3\1"+
    "\1\0\3\1\7\0\1\11\2\1\1\0\1\1\1\11"+
    "\3\1\1\0\1\1\1\0\1\1\3\0\1\1\1\11"+
    "\2\1\1\0\1\1\1\0\1\1\2\0\2\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\11\1\1\1\0"+
    "\1\1\1\0\1\1\1\11\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[451];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _TestLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _TestLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_CHARACTER;
            } 
            // fall through
          case 34: break;
          case 2: 
            { return WHITE_SPACE;
            } 
            // fall through
          case 35: break;
          case 3: 
            { return COMMENT;
            } 
            // fall through
          case 36: break;
          case 4: 
            { return NUMBER;
            } 
            // fall through
          case 37: break;
          case 5: 
            { return DOT;
            } 
            // fall through
          case 38: break;
          case 6: 
            { return DDOT;
            } 
            // fall through
          case 39: break;
          case 7: 
            { return ID;
            } 
            // fall through
          case 40: break;
          case 8: 
            { return SEMI;
            } 
            // fall through
          case 41: break;
          case 9: 
            { return EQ;
            } 
            // fall through
          case 42: break;
          case 10: 
            { return LP;
            } 
            // fall through
          case 43: break;
          case 11: 
            { return RP;
            } 
            // fall through
          case 44: break;
          case 12: 
            { return MINUS;
            } 
            // fall through
          case 45: break;
          case 13: 
            { return PLUS;
            } 
            // fall through
          case 46: break;
          case 14: 
            { return COMMA;
            } 
            // fall through
          case 47: break;
          case 15: 
            { return STAR;
            } 
            // fall through
          case 48: break;
          case 16: 
            { return LESS;
            } 
            // fall through
          case 49: break;
          case 17: 
            { return HIGHER;
            } 
            // fall through
          case 50: break;
          case 18: 
            { return STRING;
            } 
            // fall through
          case 51: break;
          case 19: 
            { return QUERY_RETURN_TYPE;
            } 
            // fall through
          case 52: break;
          case 20: 
            { return SQL;
            } 
            // fall through
          case 53: break;
          case 21: 
            { return LOAD;
            } 
            // fall through
          case 54: break;
          case 22: 
            { return LOOP;
            } 
            // fall through
          case 55: break;
          case 23: 
            { return Q_RESULT;
            } 
            // fall through
          case 56: break;
          case 24: 
            { return BEGIN;
            } 
            // fall through
          case 57: break;
          case 25: 
            { return QUERY;
            } 
            // fall through
          case 58: break;
          case 26: 
            { return PRAGMA;
            } 
            // fall through
          case 59: break;
          case 27: 
            { return QUERY_LABEL;
            } 
            // fall through
          case 60: break;
          case 28: 
            { return ENDLOOP;
            } 
            // fall through
          case 61: break;
          case 29: 
            { return RESTART;
            } 
            // fall through
          case 62: break;
          case 30: 
            { return ROLLBACK;
            } 
            // fall through
          case 63: break;
          case 31: 
            { return STATEMENT;
            } 
            // fall through
          case 64: break;
          case 32: 
            { return TRANSACTION;
            } 
            // fall through
          case 65: break;
          case 33: 
            { return PHYSICAL_PLAN;
            } 
            // fall through
          case 66: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
